% This file was created with Citavi 6.14.0.0

@article{.2007,
 year = {2007},
 journal = {MIME Media Types}
}


@article{.2008,
 year = {2008},
 journal = {Steve Vinoski Demystifying RESTful Data Coupling}
}


@article{adamtrachtenberg.2003,
 author = {{adam trachtenberg}},
 year = {2003},
 journal = {Web Services without SOAP}
}


@book{Bengel.2004,
 abstract = {Das Buch greift die aktuellen Entwicklungen auf dem Gebiet der Verteilten Systeme auf und erl{\"a}utert die Grundlagen und den Weg bis in die Anwendung. Dabei profitiert der Leser von der klaren Systematik und verst{\"a}ndlichen Darstellung aller Themen. Mit dieser Kenntnis ist der Leser in der Lage, die neuesten Technologien abzusch{\"a}tzen und sie erfolgreich in der Praxis einzuf{\"u}hren. In der 3. Auflage sind insbesondere Abschnitte {\"u}ber Web Services neu hinzugekommen. Es werden in diesem Zusammenhang SOAP, WSDL und UDDI behandelt. Neu aufgenommen wurden auch Message Driven Beans und Java Message Service.},
 author = {Bengel, G{\"u}nther},
 year = {2004},
 title = {Grundkurs Verteilte Systeme: Grundlagen und Praxis des Client-Server-Computing - Inklusive aktueller Technologien wie Web-Services u. a. - F{\"u}r Studenten und Praktiker},
 address = {Wiesbaden},
 edition = {3., verbesserte und erweiterte Auflage},
 publisher = {{Vieweg+Teubner Verlag}},
 isbn = {9783322803399},
 series = {Springer eBook Collection Computer Science and Engineering},
 doi = {10.1007/978-3-322-80339-9},
 file = {Bengel 2004 - Grundkurs Verteilte Systeme:Attachments/Bengel 2004 - Grundkurs Verteilte Systeme.pdf:application/pdf}
}


@article{fowler.2002,
 author = {fowler},
 year = {2002},
 journal = {Patterns of Enterprise Application Architecture}
}


@article{richardson.2007,
 author = {richardson},
 year = {2007},
 journal = {RESTful Web Services}
}


@article{stevevinoski.0,
 author = {{steve vinoski}},
 year = {0},
 journal = {Eye for the SOA Guy}
}


@article{thomasfielding.2000,
 author = {{thomas fielding}},
 year = {2000},
 journal = {Architectural Styles and the Design of Network-Based Software Architectures}
}


@misc{Wikipedia.2023,
 abstract = {Remote Procedure Call (RPC; englisch f{\"u}r {\glqq}Aufruf einer fernen Prozedur{\grqq}) ist eine Technik zur Realisierung von Interprozesskommunikation. Sie erm{\"o}glicht den Aufruf von Funktionen in anderen Adressr{\"a}umen. Im Normalfall werden die aufgerufenen Funktionen auf einem anderen Computer als das aufrufende Programm ausgef{\"u}hrt. Es existieren viele Implementierungen dieser Technik, die in der Regel untereinander nicht kompatibel sind.},
 editor = {Wikipedia},
 year = {2023},
 title = {Remote Procedure Call},
 url = {https://de.wikipedia.org/w/index.php?title=Remote_Procedure_Call&oldid=235807036},
 urldate = {02.09.2023},
 file = {Wikipedia (Hg.) 2023 - Remote Procedure Call:Attachments/Wikipedia (Hg.) 2023 - Remote Procedure Call.pdf:application/pdf}
}


